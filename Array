1->Given an unsorted array of non-negative integers, find a continuous sub-array which adds to a given number.
Solution:

2->Find subarray with given sum | Set 2 (Handles Negative Numbers)
Given an unsorted array of integers, find a subarray which adds to a given number. If there are more than one subarrays with sum as the given number, print any of them.




3->Sort an array of 0s, 1s and 2s
dutch flag method



4->Maximum Index
Given an array A of integers, find the maximum of j - i subjected to the constraint of A[i] <= A[j].
Example :
A : [3 5 4 2]
Output : 2 
for the pair (3, 4)


5->Majority Element
Write a program to find the majority element in the array. A majority element in an array A[] of size n is an element that appears more than n/2 times (and hence there is at most one such element).  If input array doesn't contain a majority element, then output "NO Majority Element"

Hint->Moore's Voting Algorithm


6->Sliding Window Maximum (Maximum of all subarrays of size k)
Given an array and an integer k, find the maximum for each and every contiguous subarray of size k.

Hint:-> Think of double ended queue
